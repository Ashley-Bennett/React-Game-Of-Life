{"version":3,"sources":["Box.js","Grid.js","Buttons.js","index.js"],"names":["Box","selectBox","_this","props","row","col","react_default","a","createElement","className","this","boxClass","id","onClick","React","Component","Grid","width","cols","rowsArr","i","rows","j","boxId","gridFull","push","src_Box","key","style","Buttons","handleSelect","evt","gridSize","ButtonToolbar","playButton","pauseButton","clear","slow","fast","seed","DropdownButton","title","onSelect","Dropdown","Item","eventKey","arrayClone","arr","JSON","parse","stringify","Main","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","gridCopy","state","setState","Math","floor","random","clearInterval","intervalId","setInterval","play","speed","grid","Array","fill","generation","size","g","g2","count","src_Buttons","src_Grid","ReactDOM","render","src_Main","document","getElementById"],"mappings":"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","file":"static/js/main.8ebcab50.chunk.js","sourcesContent":["import React from 'react';\n\nclass Box extends React.Component{\nselectBox = () => {\n    this.props.selectBox(this.props.row, this.props.col)\n}\n\nrender(){\n    return(\n        <div \n            className={this.props.boxClass}\n            id={this.props.id}\n            onClick={this.selectBox}/>\n    )\n}\n\n}\n\nexport default Box","import React from 'react';\nimport Box from \"./Box\"\n\nclass Grid extends React.Component {\n    render() {\n        const width = (this.props.cols * 14)\n        let rowsArr = []\n\n        let boxClass = \"\"\n        for (let i = 0; i < this.props.rows; i++){\n            for (let j = 0; j < this.props.cols; j++){\n                let boxId = i + \"_\" + j\n                boxClass = this.props.gridFull[i][j] ? \"box on\" : \"box off\"\n                rowsArr.push(\n                    <Box\n                    boxClass={boxClass}\n                    key={boxId}\n                    boxId={boxId}\n                    row={i}\n                    col={j}\n                    selectBox={this.props.selectBox}\n                    />\n\n                )\n            }\n        }\n\n        return(\n            <div className = \"grid\" style={{width: width}}>\n                {rowsArr}\n            </div>\n        )\n    }\n\n}\n\nexport default Grid","import React from 'react';\nimport { ButtonToolbar, Dropdown, DropdownButton } from \"react-bootstrap\";\n\n\nclass Buttons extends React.Component{\n\n    handleSelect = (evt) => {\n        this.props.gridSize(evt)\n    }\n\n\n    render(){\n        return(\n            <div className=\"center\">\n                <ButtonToolbar>\n                    <button className=\"btn btn-light\" onClick={this.props.playButton}>\n                    Play\n                    </button>\n                    <button className=\"btn btn-light\" onClick={this.props.pauseButton}>\n                    Pause\n                    </button>\n                    <button className=\"btn btn-light\" onClick={this.props.clear}>\n                    Clear\n                    </button>\n                    <button className=\"btn btn-light\" onClick={this.props.slow}>\n                    Slow\n                    </button>\n                    <button className=\"btn btn-light\" onClick={this.props.fast}>\n                    Fast\n                    </button>\n                    <button className=\"btn btn-light\" onClick={this.props.seed}>\n                    Seed\n                    </button>\n                    <DropdownButton\n                    title=\"Grid Size\"\n                    id=\"size-menu\"\n                    onSelect={this.handleSelect}>\n                        <Dropdown.Item eventKey=\"1\">20x10</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"2\">50x30</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"3\">70x50</Dropdown.Item>\n                    </DropdownButton>\n                </ButtonToolbar>\n            </div>\n        )\n    }\n}\n\n\nexport default Buttons","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Grid from \"./Grid\"\nimport Buttons from \"./Buttons\"\n\n\n\nconst arrayClone = (arr) => {\n    return JSON.parse(JSON.stringify(arr))\n}\n\nclass Main extends React.Component {\n\n    constructor() {\n        super()\n        this.speed = 100\n        this.rows = 20\n        this.cols = 50\n\n        this.state = {\n            generation: 0,\n            gridFull: Array(this.rows).fill(Array(this.cols).fill(false))\n        }\n    }\n\n    selectBox = (row, col) => {\n        let gridCopy = arrayClone(this.state.gridFull)\n        gridCopy[row][col] = !gridCopy[row][col]\n        this.setState({\n            gridFull:gridCopy\n        })\n    }\n\n    seed = () => {\n        let gridCopy = arrayClone(this.state.gridFull)\n        for (let i = 0; i < this.rows; i++){\n            for (let j = 0; j < this.cols; j++){\n                if (Math.floor(Math.random()* 4) === 1){\n                    gridCopy[i][j] = true\n                }     \n            }\n        }\n        this.setState({\n            gridFull:gridCopy\n            })\n    }\n\n    playButton = () => {\n        clearInterval(this.intervalId)\n        this.intervalId = setInterval(this.play, this.speed)\n    }\n\n    pauseButton = () => {\n        clearInterval(this.intervalId)\n    }\n\n    slow = () => {\n        this.speed = 1000\n        this.playButton()\n    }\n\n    fast = () => {\n        this.speed = 100\n        this.playButton()\n    }\n\n    clear = () => {\n        let grid = Array(this.rows).fill(Array(this.cols).fill(false))\n        this.setState({\n            gridFull: grid,\n            generation: 0,\n        })\n        clearInterval(this.intervalId)\n    }\n\n    gridSize = (size) => {\n        switch (size) {\n            case \"1\":\n                this.cols = 20;\n                this.rows = 10;\n            break;\n            case \"2\":\n                this.cols = 50;\n                this.rows = 30;\n            break;\n            default:\n                this.cols = 70;\n                this.rows = 50;\n        }\n        this.clear()\n    }\n\n    play = () => {\n        let g = this.state.gridFull\n        let g2 = arrayClone(g)\n        for (let i = 0; i < this.rows; i++){\n            for (let j = 0; j < this.cols; j++){\n                let count = 0\n                if (i > 0) if (g[i - 1][j]) count++;\n\t\t        if (i > 0 && j > 0) if (g[i - 1][j - 1]) count++;\n\t\t        if (i > 0 && j < this.cols - 1) if (g[i - 1][j + 1]) count++;\n\t\t        if (j < this.cols - 1) if (g[i][j + 1]) count++;\n\t\t        if (j > 0) if (g[i][j - 1]) count++;\n\t\t        if (i < this.rows - 1) if (g[i + 1][j]) count++;\n\t\t        if (i < this.rows - 1 && j > 0) if (g[i + 1][j - 1]) count++;\n\t\t        if (i < this.rows - 1 && j < this.cols - 1) if (g[i + 1][j + 1]) count++;\n\t\t        if (g[i][j] && (count < 2 || count > 3)) g2[i][j] = false;\n\t\t        if (!g[i][j] && count === 3) g2[i][j] = true;\n            }\n        }\n        this.setState({\n            gridFull: g2,\n            generation: this.state.generation + 1\n        })\n    }\n\n    componentDidMount(){\n        this.seed()\n    }\n\n    render() {\n        return(\n            <div>\n                <h1>The Game Of Life</h1>\n                <h3>Press play to watch life unfold</h3>\n                <Buttons\n                    playButton={this.playButton}\n                    pauseButton={this.pauseButton}\n                    slow={this.slow}\n                    fast={this.fast}\n                    clear={this.clear}\n                    seed={this.seed}\n                    gridSize={this.gridSize}\n                />\n                <Grid\n                    gridFull = {this.state.gridFull}\n                    rows = {this.rows}\n                    cols = {this.cols}\n                    selectBox={this.selectBox}\n                />\n                <h2>Generations: {this.state.generation}</h2>\n                <p>Each box has a chance to live or die on each generation in accordance\n                    to some rules:</p>\n                <p>1. Any living cell with fewer than two living neighbors dies, as if by underpopulation.<br/>\n                2. Any living cell with two or three living neighbors lives on to the next generation.<br/>\n                3. Any living cell with more than three living neighbors dies, as if by overpopulation.<br/>\n                4. Any dead cell with exactly three living neighbors becomes a live cell, as if by reproduction.\n                </p>\n            </div>\n        )\n    }\n\n}\n\n\nReactDOM.render(<Main/>, document.getElementById('root'));\n\n"],"sourceRoot":""}